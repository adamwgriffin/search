.slideShow {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  background-color: black;
  color: white;
  border: none;
  padding: 0;
  /* The allow-discrete makes it so the closing animation works correctly. See:
  https://frontendmasters.com/blog/animating-dialog/#transition-behavior-allow-discrete≈í
  */
  transition: display 500ms allow-discrete, overlay 500ms allow-discrete;
  animation: close 500ms forwards;
}

.slideShow[open] {
  display: flex;
  flex-direction: column;
  animation: open 500ms forwards;
}

@keyframes open {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes close {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.carousel {
  flex-grow: 1;
  display: flex;
  justify-content: space-between;
}

.figure {
  display: flex;
  flex-direction: column;
  /* Allows the image & caption to be centered vertically when they do not fill
  the height of this container */
  justify-content: center;
  margin: 0;
}

.figureHidden {
  display: none;
}

.image {
  display: block;
  object-fit: contain;
}

/* This part is essential to the layout. It makes it so that the image never
grows larger than the available space within it's container. See
https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
*/
.slideShow,
.carousel,
.figure,
.image {
  min-height: 0;
  min-width: 0;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2.5rem;
}

.caption {
  padding: 1rem;
  text-align: center;
}

.close {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  background: none;
  border: none;
  border-radius: 0.5rem;
  color: inherit;
  font: inherit;
  padding: 0.5rem 1rem;
}

.close:hover {
  background: rgb(74, 74, 74);
}

.imageCount {
  text-align: center;
  flex-grow: 1;
}

.carouselButtonContainer {
  display: flex;
  align-items: center;
}

.carouselButton {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  width: 3rem;
  height: 3rem;
  margin: 0 1.5rem;
  padding: 0;
  background: none;
  border: solid 1px white;
  border-radius: 50%;
  color: inherit;
  font: inherit;
}

.carouselButton:hover {
  background: rgb(74, 74, 74);
}
