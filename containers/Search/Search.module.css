@value smallAndUp from '../../styles/breakpoints.module.css';

.search {
  display: grid;
  /* requires all parent elements to also be height: 100% in order to work */
  height: 100%;
  grid-template-rows: auto 1fr;
}

.resultsListView,
.resultsMapView {
  height: 100%;
  position: relative;
}

.listingMap {
  height: 100%;
}

.searchResults {
  /* allows .searchResults to be layered on top of .listingMap. we use z-index to display one or the other. we want to
  avoid actually hiding them with display: none because we want to be able to have the bounds on the map to be accurate
  when sending to the listing service. if the map is set to display: none, the bounds will be wrong and the listing
  service will return nothing after we click the pagination buttons. */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* overflow needs to be on the main parent for SearchResults. adding it to the SearchResults component just causes the
  page height to increase instead of making the content scroll */
  overflow-y: auto;
  padding: 0 1rem 1rem 1rem;
  background-color: var(--background);
}

.resultsListView .searchResults,
.resultsMapView .listingMap {
  /* have to use 2, otherwise the boundary control on the map shows through because it's z-index 1 */
  z-index: 1;
}

@media smallAndUp {
  .resultsListView,
  .resultsMapView {
    display: grid;
    /* 1fr means it will fill the remaining space for each of these. auto grows as large as it's content */
    grid-template-columns: 50% 1fr;
    /* these prevent the results container from overlowing off the screen when the content of .searchResults overflows
    the window height. we only want .searchResults to scroll, not the entire window */
    min-height: 0;
    min-width: 0;
    padding-bottom: 1rem;
  }

  .searchResults {
    position: static;
    padding: 0 1rem 0 1rem;
  }

  .listingMap {
    padding: 0 1rem 0 0;
  }

  .resultsListView .searchResults {
    z-index: auto;
  }

  .resultsMapView .listingMap {
    z-index: auto;
  }
}

@media largeAndUp {
  .resultsListView,
  .resultsMapView {
    grid-template-columns: 55% 1fr;
  }
}
